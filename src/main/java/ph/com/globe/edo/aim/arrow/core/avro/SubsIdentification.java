/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package ph.com.globe.edo.aim.arrow.core.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class SubsIdentification extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6673752737967175510L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SubsIdentificationEvent\",\"namespace\":\"ph.com.globe.edo.aim.arrow.core.dto\",\"fields\":[{\"name\":\"msisdn\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"imsi\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"subs_id\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"brand\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"f_name\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"l_name\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"last_city\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"balance\",\"type\":[\"null\",\"long\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<SubsIdentification> ENCODER =
      new BinaryMessageEncoder<SubsIdentification>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SubsIdentification> DECODER =
      new BinaryMessageDecoder<SubsIdentification>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<SubsIdentification> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<SubsIdentification> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<SubsIdentification> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<SubsIdentification>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this SubsIdentificationEvent to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a SubsIdentificationEvent from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a SubsIdentificationEvent instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static SubsIdentification fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence detectionId;
   private java.lang.CharSequence msisdn;
   private java.lang.CharSequence imsi;
   private java.lang.CharSequence subs_id;
   private java.lang.CharSequence brand;
   private java.lang.CharSequence f_name;
   private java.lang.CharSequence l_name;
   private java.lang.CharSequence last_city;
   private java.lang.Long balance;

  private java.lang.CharSequence state;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SubsIdentification() {}

  /**
   * All-args constructor.
   * @param msisdn The new value for msisdn
   * @param imsi The new value for imsi
   * @param subs_id The new value for subs_id
   * @param brand The new value for brand
   * @param f_name The new value for f_name
   * @param l_name The new value for l_name
   * @param last_city The new value for last_city
   * @param balance The new value for balance
   */
  public SubsIdentification(java.lang.CharSequence msisdn, java.lang.CharSequence imsi, java.lang.CharSequence subs_id, java.lang.CharSequence brand, java.lang.CharSequence f_name, java.lang.CharSequence l_name, java.lang.CharSequence last_city, java.lang.Long balance) {
    this.msisdn = msisdn;
    this.imsi = imsi;
    this.subs_id = subs_id;
    this.brand = brand;
    this.f_name = f_name;
    this.l_name = l_name;
    this.last_city = last_city;
    this.balance = balance;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return msisdn;
    case 1: return imsi;
    case 2: return subs_id;
    case 3: return brand;
    case 4: return f_name;
    case 5: return l_name;
    case 6: return last_city;
    case 7: return balance;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: msisdn = (java.lang.CharSequence)value$; break;
    case 1: imsi = (java.lang.CharSequence)value$; break;
    case 2: subs_id = (java.lang.CharSequence)value$; break;
    case 3: brand = (java.lang.CharSequence)value$; break;
    case 4: f_name = (java.lang.CharSequence)value$; break;
    case 5: l_name = (java.lang.CharSequence)value$; break;
    case 6: last_city = (java.lang.CharSequence)value$; break;
    case 7: balance = (java.lang.Long)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }


  public void setDetectionId(java.lang.CharSequence value) {
    this.detectionId = value;
  }
  /**
   * Gets the value of the 'msisdn' field.
   * @return The value of the 'msisdn' field.
   */
  public java.lang.CharSequence getMsisdn() {
    return msisdn;
  }


  /**
   * Sets the value of the 'msisdn' field.
   * @param value the value to set.
   */
  public void setMsisdn(java.lang.CharSequence value) {
    this.msisdn = value;
  }

  /**
   * Gets the value of the 'imsi' field.
   * @return The value of the 'imsi' field.
   */
  public java.lang.CharSequence getImsi() {
    return imsi;
  }


  /**
   * Sets the value of the 'imsi' field.
   * @param value the value to set.
   */
  public void setImsi(java.lang.CharSequence value) {
    this.imsi = value;
  }

  /**
   * Gets the value of the 'subs_id' field.
   * @return The value of the 'subs_id' field.
   */
  public java.lang.CharSequence getSubsId() {
    return subs_id;
  }


  /**
   * Sets the value of the 'subs_id' field.
   * @param value the value to set.
   */
  public void setSubsId(java.lang.CharSequence value) {
    this.subs_id = value;
  }

  /**
   * Gets the value of the 'brand' field.
   * @return The value of the 'brand' field.
   */
  public java.lang.CharSequence getBrand() {
    return brand;
  }


  /**
   * Sets the value of the 'brand' field.
   * @param value the value to set.
   */
  public void setBrand(java.lang.CharSequence value) {
    this.brand = value;
  }

  /**
   * Gets the value of the 'f_name' field.
   * @return The value of the 'f_name' field.
   */
  public java.lang.CharSequence getFName() {
    return f_name;
  }


  /**
   * Sets the value of the 'f_name' field.
   * @param value the value to set.
   */
  public void setFName(java.lang.CharSequence value) {
    this.f_name = value;
  }

  /**
   * Gets the value of the 'l_name' field.
   * @return The value of the 'l_name' field.
   */
  public java.lang.CharSequence getLName() {
    return l_name;
  }


  /**
   * Sets the value of the 'l_name' field.
   * @param value the value to set.
   */
  public void setLName(java.lang.CharSequence value) {
    this.l_name = value;
  }

  /**
   * Gets the value of the 'last_city' field.
   * @return The value of the 'last_city' field.
   */
  public java.lang.CharSequence getLastCity() {
    return last_city;
  }


  /**
   * Sets the value of the 'last_city' field.
   * @param value the value to set.
   */
  public void setLastCity(java.lang.CharSequence value) {
    this.last_city = value;
  }

  /**
   * Gets the value of the 'balance' field.
   * @return The value of the 'balance' field.
   */
  public java.lang.Long getBalance() {
    return balance;
  }


  /**
   * Sets the value of the 'balance' field.
   * @param value the value to set.
   */
  public void setBalance(java.lang.Long value) {
    this.balance = value;
  }

  /**
   * Creates a new SubsIdentificationEvent RecordBuilder.
   * @return A new SubsIdentificationEvent RecordBuilder
   */

  public void setState(java.lang.CharSequence value) {
    this.state = value;
  }

  public static SubsIdentification.Builder newBuilder() {
    return new SubsIdentification.Builder();
  }

  /**
   * Creates a new SubsIdentificationEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SubsIdentificationEvent RecordBuilder
   */
  public static SubsIdentification.Builder newBuilder(SubsIdentification.Builder other) {
    if (other == null) {
      return new SubsIdentification.Builder();
    } else {
      return new SubsIdentification.Builder(other);
    }
  }

  /**
   * Creates a new SubsIdentificationEvent RecordBuilder by copying an existing SubsIdentificationEvent instance.
   * @param other The existing instance to copy.
   * @return A new SubsIdentificationEvent RecordBuilder
   */
  public static SubsIdentification.Builder newBuilder(SubsIdentification other) {
    if (other == null) {
      return new SubsIdentification.Builder();
    } else {
      return new SubsIdentification.Builder(other);
    }
  }

  /**
   * RecordBuilder for SubsIdentificationEvent instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SubsIdentification>
    implements org.apache.avro.data.RecordBuilder<SubsIdentification> {

    private java.lang.CharSequence msisdn;
    private java.lang.CharSequence imsi;
    private java.lang.CharSequence subs_id;
    private java.lang.CharSequence brand;
    private java.lang.CharSequence f_name;
    private java.lang.CharSequence l_name;
    private java.lang.CharSequence last_city;
    private java.lang.Long balance;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(SubsIdentification.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.msisdn)) {
        this.msisdn = data().deepCopy(fields()[0].schema(), other.msisdn);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.imsi)) {
        this.imsi = data().deepCopy(fields()[1].schema(), other.imsi);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.subs_id)) {
        this.subs_id = data().deepCopy(fields()[2].schema(), other.subs_id);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.brand)) {
        this.brand = data().deepCopy(fields()[3].schema(), other.brand);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.f_name)) {
        this.f_name = data().deepCopy(fields()[4].schema(), other.f_name);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.l_name)) {
        this.l_name = data().deepCopy(fields()[5].schema(), other.l_name);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.last_city)) {
        this.last_city = data().deepCopy(fields()[6].schema(), other.last_city);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.balance)) {
        this.balance = data().deepCopy(fields()[7].schema(), other.balance);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
    }

    /**
     * Creates a Builder by copying an existing SubsIdentificationEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(SubsIdentification other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.msisdn)) {
        this.msisdn = data().deepCopy(fields()[0].schema(), other.msisdn);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.imsi)) {
        this.imsi = data().deepCopy(fields()[1].schema(), other.imsi);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.subs_id)) {
        this.subs_id = data().deepCopy(fields()[2].schema(), other.subs_id);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.brand)) {
        this.brand = data().deepCopy(fields()[3].schema(), other.brand);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.f_name)) {
        this.f_name = data().deepCopy(fields()[4].schema(), other.f_name);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.l_name)) {
        this.l_name = data().deepCopy(fields()[5].schema(), other.l_name);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.last_city)) {
        this.last_city = data().deepCopy(fields()[6].schema(), other.last_city);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.balance)) {
        this.balance = data().deepCopy(fields()[7].schema(), other.balance);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the 'msisdn' field.
      * @return The value.
      */
    public java.lang.CharSequence getMsisdn() {
      return msisdn;
    }


    /**
      * Sets the value of the 'msisdn' field.
      * @param value The value of 'msisdn'.
      * @return This builder.
      */
    public SubsIdentification.Builder setMsisdn(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.msisdn = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'msisdn' field has been set.
      * @return True if the 'msisdn' field has been set, false otherwise.
      */
    public boolean hasMsisdn() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'msisdn' field.
      * @return This builder.
      */
    public SubsIdentification.Builder clearMsisdn() {
      msisdn = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'imsi' field.
      * @return The value.
      */
    public java.lang.CharSequence getImsi() {
      return imsi;
    }


    /**
      * Sets the value of the 'imsi' field.
      * @param value The value of 'imsi'.
      * @return This builder.
      */
    public SubsIdentification.Builder setImsi(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.imsi = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'imsi' field has been set.
      * @return True if the 'imsi' field has been set, false otherwise.
      */
    public boolean hasImsi() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'imsi' field.
      * @return This builder.
      */
    public SubsIdentification.Builder clearImsi() {
      imsi = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'subs_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getSubsId() {
      return subs_id;
    }


    /**
      * Sets the value of the 'subs_id' field.
      * @param value The value of 'subs_id'.
      * @return This builder.
      */
    public SubsIdentification.Builder setSubsId(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.subs_id = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'subs_id' field has been set.
      * @return True if the 'subs_id' field has been set, false otherwise.
      */
    public boolean hasSubsId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'subs_id' field.
      * @return This builder.
      */
    public SubsIdentification.Builder clearSubsId() {
      subs_id = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'brand' field.
      * @return The value.
      */
    public java.lang.CharSequence getBrand() {
      return brand;
    }


    /**
      * Sets the value of the 'brand' field.
      * @param value The value of 'brand'.
      * @return This builder.
      */
    public SubsIdentification.Builder setBrand(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.brand = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'brand' field has been set.
      * @return True if the 'brand' field has been set, false otherwise.
      */
    public boolean hasBrand() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'brand' field.
      * @return This builder.
      */
    public SubsIdentification.Builder clearBrand() {
      brand = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'f_name' field.
      * @return The value.
      */
    public java.lang.CharSequence getFName() {
      return f_name;
    }


    /**
      * Sets the value of the 'f_name' field.
      * @param value The value of 'f_name'.
      * @return This builder.
      */
    public SubsIdentification.Builder setFName(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.f_name = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'f_name' field has been set.
      * @return True if the 'f_name' field has been set, false otherwise.
      */
    public boolean hasFName() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'f_name' field.
      * @return This builder.
      */
    public SubsIdentification.Builder clearFName() {
      f_name = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'l_name' field.
      * @return The value.
      */
    public java.lang.CharSequence getLName() {
      return l_name;
    }


    /**
      * Sets the value of the 'l_name' field.
      * @param value The value of 'l_name'.
      * @return This builder.
      */
    public SubsIdentification.Builder setLName(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.l_name = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'l_name' field has been set.
      * @return True if the 'l_name' field has been set, false otherwise.
      */
    public boolean hasLName() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'l_name' field.
      * @return This builder.
      */
    public SubsIdentification.Builder clearLName() {
      l_name = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'last_city' field.
      * @return The value.
      */
    public java.lang.CharSequence getLastCity() {
      return last_city;
    }


    /**
      * Sets the value of the 'last_city' field.
      * @param value The value of 'last_city'.
      * @return This builder.
      */
    public SubsIdentification.Builder setLastCity(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.last_city = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'last_city' field has been set.
      * @return True if the 'last_city' field has been set, false otherwise.
      */
    public boolean hasLastCity() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'last_city' field.
      * @return This builder.
      */
    public SubsIdentification.Builder clearLastCity() {
      last_city = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'balance' field.
      * @return The value.
      */
    public java.lang.Long getBalance() {
      return balance;
    }


    /**
      * Sets the value of the 'balance' field.
      * @param value The value of 'balance'.
      * @return This builder.
      */
    public SubsIdentification.Builder setBalance(java.lang.Long value) {
      validate(fields()[7], value);
      this.balance = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'balance' field has been set.
      * @return True if the 'balance' field has been set, false otherwise.
      */
    public boolean hasBalance() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'balance' field.
      * @return This builder.
      */
    public SubsIdentification.Builder clearBalance() {
      balance = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SubsIdentification build() {
      try {
        SubsIdentification record = new SubsIdentification();
        record.msisdn = fieldSetFlags()[0] ? this.msisdn : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.imsi = fieldSetFlags()[1] ? this.imsi : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.subs_id = fieldSetFlags()[2] ? this.subs_id : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.brand = fieldSetFlags()[3] ? this.brand : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.f_name = fieldSetFlags()[4] ? this.f_name : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.l_name = fieldSetFlags()[5] ? this.l_name : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.last_city = fieldSetFlags()[6] ? this.last_city : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.balance = fieldSetFlags()[7] ? this.balance : (java.lang.Long) defaultValue(fields()[7]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SubsIdentification>
    WRITER$ = (org.apache.avro.io.DatumWriter<SubsIdentification>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SubsIdentification>
    READER$ = (org.apache.avro.io.DatumReader<SubsIdentification>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.msisdn == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.msisdn);
    }

    if (this.imsi == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.imsi);
    }

    if (this.subs_id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.subs_id);
    }

    if (this.brand == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.brand);
    }

    if (this.f_name == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.f_name);
    }

    if (this.l_name == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.l_name);
    }

    if (this.last_city == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.last_city);
    }

    if (this.balance == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.balance);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.msisdn = null;
      } else {
        this.msisdn = in.readString(this.msisdn instanceof Utf8 ? (Utf8)this.msisdn : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.imsi = null;
      } else {
        this.imsi = in.readString(this.imsi instanceof Utf8 ? (Utf8)this.imsi : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.subs_id = null;
      } else {
        this.subs_id = in.readString(this.subs_id instanceof Utf8 ? (Utf8)this.subs_id : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.brand = null;
      } else {
        this.brand = in.readString(this.brand instanceof Utf8 ? (Utf8)this.brand : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.f_name = null;
      } else {
        this.f_name = in.readString(this.f_name instanceof Utf8 ? (Utf8)this.f_name : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.l_name = null;
      } else {
        this.l_name = in.readString(this.l_name instanceof Utf8 ? (Utf8)this.l_name : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.last_city = null;
      } else {
        this.last_city = in.readString(this.last_city instanceof Utf8 ? (Utf8)this.last_city : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.balance = null;
      } else {
        this.balance = in.readLong();
      }

    } else {
      for (int i = 0; i < 8; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.msisdn = null;
          } else {
            this.msisdn = in.readString(this.msisdn instanceof Utf8 ? (Utf8)this.msisdn : null);
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.imsi = null;
          } else {
            this.imsi = in.readString(this.imsi instanceof Utf8 ? (Utf8)this.imsi : null);
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.subs_id = null;
          } else {
            this.subs_id = in.readString(this.subs_id instanceof Utf8 ? (Utf8)this.subs_id : null);
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.brand = null;
          } else {
            this.brand = in.readString(this.brand instanceof Utf8 ? (Utf8)this.brand : null);
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.f_name = null;
          } else {
            this.f_name = in.readString(this.f_name instanceof Utf8 ? (Utf8)this.f_name : null);
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.l_name = null;
          } else {
            this.l_name = in.readString(this.l_name instanceof Utf8 ? (Utf8)this.l_name : null);
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.last_city = null;
          } else {
            this.last_city = in.readString(this.last_city instanceof Utf8 ? (Utf8)this.last_city : null);
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.balance = null;
          } else {
            this.balance = in.readLong();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










